plugins:
  - serverless-dynamodb-local
  - serverless-offline

org: janisrasins
app: social-serveless
service: social-serveless

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: eu-central-1
  memorySize: 256
  iam:
    role:
      statements: # permissions for all of your functions can be set here
        - Effect: Allow
          Action: # Gives permission to DynamoDB tables in a specific region
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:eu-central-1:*:*"
  environment:
    TABLE_USERS: users

custom:
  serverless-offline:
    httpsProtocol: "keys"
    httpPort: 4000
    lambdaPort: 4002
  dynamodb:
    stages:
      - dev
    start:
      docker: true
      port: 8010
      inMemory: true
      migrate: true
      seed: true
      convertEmptyValues: true
      noStart: true

functions:
  hello-world:
    handler: handler.handle # required, handler set in AWS Lambda
    name: "${self:service}-${self:provider.stage}" # optional, Deployed Lambda name
    description: "slspress offline example"
    events:
      - http:
          path: hello-world
          method: get
          cors: true
  createUser:
    handler: handler.createUser
    events:
      - http:
          path: users
          method: POST
  getUsers:
    handler: handler.listUsers
    events:
      - http:
          path: users
          method: GET
  deleteUser:
    handler: handler.deleteUser
    events:
      - http:
          path: users/:userId
          method: DELETE
          request:
            parameters:
              paths:
                name: true

resources: # CloudFormation template syntax
  Resources:
    socialUsers:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: N
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 3
          WriteCapacityUnits: 3
